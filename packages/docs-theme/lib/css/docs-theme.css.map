{"version":3,"sourceRoot":"","sources":["../../src/docs-theme.scss","../../../../node_modules/@blueprintjs/core/src/common/_react-transition.scss","../../../../node_modules/@blueprintjs/colors/lib/scss/colors.scss","../../src/styles/_api.scss","../../../../node_modules/@blueprintjs/core/src/common/_variables.scss","../../../../node_modules/@blueprintjs/core/src/components/button/_common.scss","../../src/styles/_banner.scss","../../../../node_modules/@blueprintjs/core/src/common/_flex.scss","../../../../node_modules/@blueprintjs/core/src/common/_mixins.scss","../../src/styles/_content.scss","../../src/styles/_variables.scss","../../../../node_modules/@blueprintjs/core/src/components/icon/_icon-mixins.scss","../../src/styles/_examples.scss","../../../core/src/components/button/_common.scss","../../src/styles/_layout.scss","../../../core/src/common/_flex.scss","../../src/styles/_navbar.scss","../../src/styles/_navigator.scss","../../src/styles/_overrides.scss","../../src/styles/_props.scss","../../src/styles/_syntax.scss"],"names":[],"mappings":"AAAA;;AAAA;AAAA;;AAAA;ACGA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;ACvGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACOE;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;;AAEA;EACE;EACA;EACA;;AAIJ;EACE;EACA;;AAEA;AAAA;EAEE;;AAGF;EACE;;AAKF;EACE,kBDhCO;ECiCP,YCoGuB;;;AD/F7B;EACE,aCNyB;EDOzB;;;ADjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AGWA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;ACFA;ECEI;EAEF,gBDH2B;EEiE3B;EACA;EACA;EACA;EFlEA;EAEA;AACA;EACA;EACA;EACA;EACA;EACA,YAdc;EAed;EAEA;EACA;EACA;EACA;EACA;;ACZA;EACE;EACA;;AAGF;EACE;EACA;;ADQA;EACE;;AAEA;EACE;;AAGF;EACE;;AARJ;EACE;;AAEA;EACE;;AAGF;EACE;;AARJ;EACE;;AAEA;EACE;;AAGF;EACE;;AARJ;EACE;;AAEA;EACE;;AAGF;EACE;;AAKN;EACE;;AAGF;EACE;;AAGF;EACE,aA9CY;;AAgDZ;EACE;;AAGF;EAEE;;;AJ5DN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AOcA;EACE;EACA;;AAGA;EACE,YCJc;;;ADWlB;EACE;EACA;;;AAGF;EETE,OTXM;EOsBN;EACA,aLZsB;EKatB;EACA,SLrBa;EKsBb;EACA;EACA;;AEfA;EACE,OTpBS;;ASuBX;EACE,OTfI;;ASiBJ;EACE,OTXQ;;AOoBZ;EACE;;AAGF;EAEE;;;AAIJ;EACE;;;AAIF;EACE;EACA;;AAEA;EACE;EACA;EACA;;AAGF;EAEE;;AAGA;EACE;EACA,eLiBa;EKhBb,OPTI;EOUJ;;AAIF;EACE;EACA,OPvBE;;;AUzCR;EACE;EACA;EACA;;;AAIF;ELdI;EAEF,gBKa2B;;ALX3B;EACE;EACA;;AAGF;EACE;EACA;;AAeF;AAAA;EAGE,cHxBW;;AG4Bb;AAAA;EAEE;;AKjBF;ELlBE;EAEF,gBKiB6B;EAC3B;;ALhBF;EACE;EACA;;AAGF;EACE;EACA;;AAeF;AAAA;EAGE,eHxBW;;AG4Bb;AAAA;EAEE;;;AKVJ;ELzBI;EAEF,gBKwB2B;;ALtB3B;EACE;EACA;;AAGF;EACE;EACA;;AAeF;AAAA;EAGE,eHxBW;;AG4Bb;AAAA;EAEE;;AKNF;EL7BE;EAEF,gBK4B6B;EAC3B;EACA;;AL5BF;EACE;EACA;;AAGF;EACE;EACA;;AAeF;AAAA;EAGE,cKCgC;;ALGlC;AAAA;EAEE;;;AKCJ;EACE;EACA,YVzBM;EU0BN,eA5C4B;EA6C5B;EACA;EACA;EACA;EACA;EAEA;EACA;;AAEA;EACE,YVtDS;;AUyDX;EACE;;;AAIJ;EACE,kBVjDY;EUkDZ,eAjE4B;EAkE5B;EACA;EACA;;AAEA;EACE,YR7DW;;AQgEb;EACE,WRjCiB;;AQoCnB;AAAA;AAAA;EAGE;;AAGF;EACE,kBVlFS;;;AUsFb;EACE,YRhFa;;AQkFb;EACE,YV9EU;EU+EV,eA9F0B;EA+F1B;EACA;;AAEA;EACE,YVhGO;EUiGP;;;AAKN;EACE,eA1G4B;EA2G5B;EACA;EACA,YRnGa;;AQqGb;EACE,QRrBqB;EQsBrB;;AAGF;EACE,kBVtGU;;AUwGV;EACE,kBVrHO;;;AU2Hb;EACE,OVnEQ;;;AUsEV;EACE,OV9EM;;;AA3DR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AWWA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;ACEA;EAEE;;;AAGF;AAAA;AAAA;AAIA;ECXI;EAEF,gBDU2B;;ACR3B;EACE;EACA;;AAGF;EACE;EACA;;;ADIJ;ECfI;EAEF,gBDc2B;;ACZ3B;EACE;EACA;;AAGF;EACE;EACA;;;ADQJ;AAAA;AAAA;AAIA;EACE,kBZbY;;AYeZ;EACE,kBZ9BS;;;AYkCb;EC/BI;EAEF,gBD8B2B;EAC3B;EACA,WJtCgB;EIuChB;;AC/BA;EACE;EACA;;AAGF;EACE;EACA;;;AD2BJ;EACE,YJxCc;EIyCd;EACA,SVyDmB;;;AUtDrB;EAEE,kBZjCM;EYkCN;EACA;AAGA;EACA;EACA;EACA;EACA;EAEA;EACA;;AAEA;EACE,kBZ/DS;EYgET;;AAGF;EACE,SJlEc;EImEd;;;AAIJ;EACE;EACA,kBZ9DY;EY+DZ,YJtEc;EIuEd;;AAEA;EACE,kBZjFS;;;AYqFb;EACE,WJ/Ec;EIgFd;EACA;EACA,eJzFkB;AI0FlB;EACA;EACA;;;AAGF;EACE;EACA;EACA,KJlGkB;EIoGlB;;;AAGF;AAAA;AAAA;AAKE;EACE;EACA;EACA,eVvGW;EUwGX;;AAEA;AAIE;EACA;EACA;;AAIA;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AAKN;EAEE;EAEA,aAxIc;;AA2IhB;EACE;;;AAIJ;EC3II;EAEF,gBD0I2B;EAC3B;;ACzIA;EACE;EACA;;AAGF;EACE;EACA;;;ADsIJ;EACE;;;AAIF;EACE;;;AAOA;AAAA;AAAA;AAAA;EAIE;;;AZ7KJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AWWA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AGKA;EDLI;EAEF,gBCI2B;EAC3B;EACA;EAEA;EACA;EACA;;ADRA;EACE;EACA;;AAGF;EACE;EACA;;AAeF;AAAA;EAGE,cCvB8B;;AD2BhC;AAAA;EAEE;;ACrBF;EAhBA;EAkBE;;AAhBF;EACE;;;AAmBJ;EAtBE;EAwBA;EACA;EACA;EACA;;AAzBA;EACE;;;ACPJ;EACE;EACA,OAJgB;;AAMhB;EACE;EAEA;;;ACTJ;EACE;;;AAIF;EACE;;;AAGF;EACE;;;ACVF;AACE;EACA;EACA;EACA;EACA;EACA;EACA;AACA;;;AAGF;EACE;;AAEA;EAAU;;AAEV;EACE;EACA;EACA;;;AAIJ;EACE;;AAEA;EACE;;;AAKF;EAAU;;AAEV;EACE,cftBW;EeuBX;;;AAIJ;ER7BE;EACA,WPQsB;EOPtB;EACA;EACA;EACA;EAbA;EACA;EQsCA;EACA;EACA;;;AAGF;EACE,OjBLK;;AiBOL;EACE;;;AAIJ;EACE,OjBzBO;;AiB2BP;EACE,OjB3BK;;AiB8BP;EACE;;;AAIJ;EACE;EACA;EACA;EACA,afhCyB;EeiCzB,Wf9BmB;Ee+BnB;EACA;EACA;EACA;;AAGA;EACE;EACA;EACA;EACA,YftEW;;AeyEb;EACE;;AAEA;EACE;;;AAKN;EAEE;;;AAGF;EACE;EACA;;;AAIA;EACE,Yf9FW;;AeiGb;AAAA;EAEE;;AAGF;EACE;;;AAKJ;EACE,eVtHe;EUuHf;;;AjB9HF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AkBqFA;EAEE,YlB/DM;EkBgEN,OlBlFW;;AkBgDX;AAAA;AAAA;AAAA;EAIE;;AAKE;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AAwDhB;EAAa,OAxDG;;AA4DpB;AAAA;AAAA;EAGE;;AAGF;AAAA;EAEE;;AAIF;EACE;;AAWF;EACE;;AAGF;EAEE,YlB1FS;EkB2FT,OlBlFI;;AkBsCN;AAAA;AAAA;AAAA;EAIE;;AAKE;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAiCrB;EAAa,OAjCQ;;AAqCzB;AAAA;AAAA;EAGE;;AAGF;AAAA;EAEE;;AAIF;EACE","file":"docs-theme.css","sourcesContent":["/*\n\nCopyright 2015-present Palantir Technologies, Inc. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\n*/\n\n@import \"styles/api\";\n@import \"styles/banner\";\n@import \"styles/content\";\n@import \"styles/examples\";\n@import \"styles/layout\";\n@import \"styles/navbar\";\n@import \"styles/navigator\";\n@import \"styles/overrides\";\n@import \"styles/props\";\n@import \"styles/syntax\";\n","// Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n@mixin react-transition(\n  $name,\n  $properties,\n  $duration: $pt-transition-duration,\n  $easing: $pt-transition-ease,\n  $delay: 0,\n  $before: \"\",\n  $after: \"\"\n) {\n  @include each-prop($properties, 2);\n  @include react-transition-phase(\n    $name, \"enter\", $properties,\n    $duration, $easing, $delay,\n    $before, $after\n  );\n  @include react-transition-phase(\n    $name, \"exit\", $properties,\n    $duration, $easing, $delay,\n    $before, $after\n  );\n}\n\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n@mixin react-transition-phase(\n  $name,\n  $phase,\n  $properties,\n  $duration: $pt-transition-duration,\n  $easing: $pt-transition-ease,\n  $delay: 0,\n  $before: \"\",\n  $after: \"\"\n) {\n  $start-index: 1;\n  $end-index: 2;\n\n  @if ($phase == \"exit\") {\n    $start-index: 2;\n    $end-index: 1;\n  } @else if ($phase != \"enter\" and $phase != \"appear\") {\n    @error \"Unknown transition phase: #{$phase}. Expected appear|enter|exit.\";\n  }\n\n  #{transition-name($phase, $name, $before, $after)} {\n    @include each-prop($properties, $start-index);\n  }\n\n  #{transition-name(#{$phase}-active, $name, $before, $after)} {\n    @include each-prop($properties, $end-index);\n    transition-delay: $delay;\n    transition-duration: $duration;\n    transition-property: map-keys($properties);\n    /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n    transition-timing-function: $easing;\n  }\n}\n\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n@mixin each-prop($properties, $index) {\n  @each $prop, $values in $properties {\n    #{$prop}: nth($values, $index);\n  }\n}\n\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n@function transition-name($phase, $name, $before, $after) {\n  $full-name: \"#{$before}.#{$name}-#{$phase}#{$after}\";\n\n  @if ($phase == \"enter\") {\n    @return ($full-name, transition-name(\"appear\", $name, $before, $after));\n  } @else if ($phase == \"enter-active\") {\n    @return ($full-name, transition-name(\"appear-active\", $name, $before, $after));\n  } @else {\n    @return $full-name;\n  }\n}\n","/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n\n$black: #00130c !default;\n\n$dark-gray1: #002618 !default;\n$dark-gray2: #1c2f29 !default;\n$dark-gray3: #333f3b !default;\n$dark-gray4: #4d5754 !default;\n$dark-gray5: #666f6c !default;\n\n$gray1: #808785 !default;\n$gray2: #999f9d !default;\n$gray3: #b3b7b6 !default;\n$gray4: #cccfce !default;\n$gray5: #e6e7e7 !default;\n\n$light-gray1: #edeff2 !default;\n$light-gray2: #f2f4f6 !default;\n$light-gray3: #f6f7f9 !default;\n$light-gray4: #fafafb !default;\n$light-gray5: #fdfdfd !default;\n\n$white: #fff !default;\n\n$blue1: #184a90 !default;\n$blue2: #215db0 !default;\n$blue3: #2d72d2 !default;\n$blue4: #4c90f0 !default;\n$blue5: #8abbff !default;\n\n$green1: #165a36 !default;\n$green2: #1c6e42 !default;\n$green3: #238551 !default;\n$green4: #32a467 !default;\n$green5: #72ca9b !default;\n\n$orange1: #77450d !default;\n$orange2: #935610 !default;\n$orange3: #c87619 !default;\n$orange4: #ec9a3c !default;\n$orange5: #fbb360 !default;\n\n$red1: #8e292c;\n$red2: #ac2f33;\n$red3: #cd4246;\n$red4: #e76a6e;\n$red5: #fa999c;\n\n$vermilion1: #96290d !default;\n$vermilion2: #b83211 !default;\n$vermilion3: #d33d17 !default;\n$vermilion4: #eb6847 !default;\n$vermilion5: #ff9980 !default;\n\n$rose1: #a82255 !default;\n$rose2: #c22762 !default;\n$rose3: #db2c6f !default;\n$rose4: #f5498b !default;\n$rose5: #ff66a1 !default;\n\n$violet1: #5c255c !default;\n$violet2: #7c327c !default;\n$violet3: #9d3f9d !default;\n$violet4: #bd6bbd !default;\n$violet5: #d69fd6 !default;\n\n$indigo1: #5642a6 !default;\n$indigo2: #634dbf !default;\n$indigo3: #7961db !default;\n$indigo4: #9881f3 !default;\n$indigo5: #bdadff !default;\n\n$cerulean1: #1f4b99 !default;\n$cerulean2: #2458b3 !default;\n$cerulean3: #2965cc !default;\n$cerulean4: #4580e6 !default;\n$cerulean5: #669eff !default;\n\n$turquoise1: #004d46 !default;\n$turquoise2: #007067 !default;\n$turquoise3: #00a396 !default;\n$turquoise4: #13c9ba !default;\n$turquoise5: #7ae1d8 !default;\n\n$forest1: #1d7324 !default;\n$forest2: #238c2c !default;\n$forest3: #29a634 !default;\n$forest4: #43bf4d !default;\n$forest5: #62d96b !default;\n\n$lime1: #43501b !default;\n$lime2: #5a701a !default;\n$lime3: #8eb125 !default;\n$lime4: #b6d94c !default;\n$lime5: #d4f17e !default;\n\n$gold1: #5c4405 !default;\n$gold2: #866103 !default;\n$gold3: #d1980b !default;\n$gold4: #f0b726 !default;\n$gold5: #fbd065 !default;\n\n$sepia1: #5e4123 !default;\n$sepia2: #7a542e !default;\n$sepia3: #946638 !default;\n$sepia4: #af855a !default;\n$sepia5: #d0b090 !default;\n\n$primary1: #03431b !default;\n$primary2: #05531b !default;\n$primary3: #0a7415 !default;\n$primary4: #3b9044 !default;\n$primary5: #6cac73 !default;\n\n$danger1: #8c163d !default;\n$danger2: #ae2445 !default;\n$danger3: #f24852 !default;\n$danger4: #f56d75 !default;\n$danger5: #f79197 !default;\n\n$success1: #2c7406 !default;\n$success2: #3f9009 !default;\n$success3: #6ec913 !default;\n$success4: #8bd442 !default;\n$success5: #a8df71 !default;\n\n$warning1: #b77a05 !default;\n$warning2: #db9907 !default;\n$warning3: #ffba0a !default;\n$warning4: #ffc83b !default;\n$warning5: #ffd66c !default;\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/core/src/common/react-transition\";\n@import \"variables\";\n\n.docs-api-drawer {\n  .docs-modifiers {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    margin: 0;\n  }\n\n  .docs-interface-header {\n    flex: 0 0 auto;\n    padding: $pt-grid-size ($pt-grid-size * 2);\n\n    + .docs-section {\n      flex-shrink: 0;\n      padding-left: $pt-grid-size * 2;\n      padding-right: $pt-grid-size * 2;\n    }\n  }\n\n  .docs-modifiers-table {\n    overflow: auto;\n    padding-bottom: $pt-grid-size * 2;\n\n    th:first-child,\n    td:first-child {\n      padding-left: $pt-grid-size * 2;\n    }\n\n    td:last-child {\n      padding-right: $pt-grid-size * 2;\n    }\n  }\n\n  &.#{$ns}-dark {\n    .docs-modifiers {\n      background-color: $dark-sidebar-background-color;\n      box-shadow: $pt-dark-elevation-shadow-4;\n    }\n  }\n}\n\n.docs-code {\n  font-family: $pt-font-family-monospace;\n  font-weight: 600;\n}\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:math\";\n@import \"color-aliases\";\n@import \"mixins\";\n\n// Namespace appended to the beginning of each CSS class: `.#{$ns}-button`.\n// N.B. No quotes around this string value, for Less syntax compatibility. Also, this cannot be overriden\n// (the JS components have this class prefix hard-coded), so it does not have the `!default` modifier.\n$ns: bp4;\n// Alias for BP users outside this repo\n$bp-ns: $ns;\n\n// easily the most important variable, so it comes up top\n// (so other variables can use it to define themselves)\n$pt-grid-size: 10px !default;\n\n// Icon variables\n\n$icons16-family: \"blueprint-icons-16\" !default;\n$icons20-family: \"blueprint-icons-20\" !default;\n\n$pt-icon-size-standard: 16px !default;\n$pt-icon-size-large: 20px !default;\n\n// Typography\n\n// see https://bitsofco.de/the-new-system-font-stack/\n$pt-font-family: \"GT Walsheim Pro\",\n                 -apple-system,\n                 \"BlinkMacSystemFont\",\n                 \"Segoe UI\",\n                 \"Roboto\",\n                 \"Oxygen\",\n                 \"Ubuntu\",\n                 \"Cantarell\",\n                 \"Open Sans\",\n                 \"Helvetica Neue\",\n                 $icons16-family, // support inline Blueprint icons\n                 sans-serif !default;\n\n$pt-font-family-monospace: monospace !default;\n$pt-font-size: $pt-grid-size * 1.2 !default;\n\n$pt-font-size-large: $pt-grid-size * 1.4 !default;\n$pt-line-height-large: $pt-grid-size * 2 !default;\n\n$pt-font-size-small: $pt-grid-size * 1.0 !default;\n$pt-line-height-small: $pt-grid-size * 1.4 !default;\n\n\n// a little bit extra to ensure the height comes out to just over 18px (and browser rounds to 18px)\n$pt-line-height: math.div($pt-grid-size * 1.6, $pt-font-size) !default;\n\n\n$comp-font-size: $pt-font-size-large;\n$comp-line-height: $pt-line-height;\n$comp-font-size-large: 16px !default;\n$comp-line-height-large: 20px !default;\n$comp-font-size-small: $pt-font-size;\n$comp-line-height-small: $pt-line-height-small;\n\n\n$comp-icon-spacing: ($pt-grid-size * 0.8) !default;\n$comp-icon-spacing-large: ($pt-grid-size * 1) !default;\n$comp-icon-spacing-small: ($pt-grid-size * 0.6) !default;\n\n\n$comp-spacing-horz: ($pt-grid-size * 0.8) !default;\n$comp-spacing-vert: ($pt-grid-size * 0.5) !default;\n$comp-padding: $comp-spacing-vert $comp-spacing-horz !default;\n\n$comp-spacing-small-horz: ($pt-grid-size * 0.4) !default;\n$comp-spacing-small-vert: ($pt-grid-size * 0.4) !default;\n\n$comp-padding-small: $comp-spacing-small-vert $comp-spacing-small-horz !default;\n\n$comp-spacing-large-horz: ($pt-grid-size * 1.2) !default;\n$comp-spacing-large-vert: ($pt-grid-size * 1) !default;\n\n$comp-padding-large: $comp-spacing-large-vert $comp-spacing-large-horz !default;\n\n\n\n\n\n\n\n// Grids & dimensions\n\n$pt-border-radius: floor(math.div($pt-grid-size, 5)) !default;\n\n// Buttons\n$pt-button-height: $pt-grid-size * 3 !default;\n$pt-button-height-small: $pt-grid-size * 2.4 !default;\n$pt-button-height-smaller: $pt-grid-size * 2 !default;\n$pt-button-height-large: $pt-grid-size * 4 !default;\n\n// Inputs\n$pt-input-height: $pt-grid-size * 3 !default;\n$pt-input-height-large: $pt-grid-size * 4 !default;\n$pt-input-height-small: $pt-grid-size * 2.4 !default;\n\n// Others\n$pt-navbar-height: $pt-grid-size * 5 !default;\n\n// Z-indices\n$pt-z-index-base: 0 !default;\n$pt-z-index-content: $pt-z-index-base + 10 !default;\n$pt-z-index-overlay: $pt-z-index-content + 10 !default;\n$pt-z-index-dialog-header: $pt-z-index-overlay + 10 !default;\n\n// Shadow opacities\n$pt-border-shadow-opacity: 0.1 !default;\n$pt-drop-shadow-opacity: 0.2 !default;\n$pt-dark-border-shadow-opacity: $pt-border-shadow-opacity * 2 !default;\n$pt-dark-drop-shadow-opacity: $pt-drop-shadow-opacity * 2 !default;\n\n// Elevations\n$pt-elevation-shadow-0: inset 0 0 0 1px $pt-divider-black !default;\n$pt-elevation-shadow-1: border-shadow($pt-border-shadow-opacity),\n                        0 2px 2px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-2: border-shadow($pt-border-shadow-opacity),\n                        0 1px 1px rgba($black, $pt-drop-shadow-opacity),\n                        0 2px 8px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-3: border-shadow($pt-border-shadow-opacity),\n                        0 2px 8px rgba($black, $pt-drop-shadow-opacity),\n                        0 4px 12px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-4: border-shadow($pt-border-shadow-opacity),\n                        0 4px 8px rgba($black, $pt-drop-shadow-opacity),\n                        0 8px 28px 6px rgba($black, $pt-drop-shadow-opacity) !default;\n\n$pt-dark-elevation-shadow-0: inset 0 0 0 1px rgba($white, 0.2) !default;\n$pt-dark-elevation-shadow-1: inset 0 0 0 1px rgba($white, 0.2),\n                             0 1px 1px 0 rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-2: inset 0 0 0 1px rgba($white, 0.2),\n                             0 1px 1px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 2px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-3: inset 0 0 0 1px rgba($white, 0.2),\n                             0 2px 4px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 8px 24px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-4: inset 0 0 0 1px rgba($white, 0.2),\n                             0 4px 8px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 18px 46px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n\n// Transitions\n$pt-transition-ease: cubic-bezier(0.4, 1, 0.75, 0.9) !default;\n$pt-transition-ease-bounce: cubic-bezier(0.54, 1.12, 0.38, 1.11) !default;\n$pt-transition-duration: 100ms !default;\n\n// Light theme styles\n\n$pt-input-box-shadow: inset 0 0 0 1px $gray3 !default;\n\n$pt-dialog-box-shadow: $pt-elevation-shadow-3 !default;\n$pt-popover-box-shadow: $pt-elevation-shadow-3 !default;\n$pt-tooltip-box-shadow: $pt-popover-box-shadow !default;\n// Equivalent to $pt-dark-elevation-shadow-3, but swaps the outset border for an inset one\n$pt-toast-box-shadow: $pt-elevation-shadow-2 !default;\n\n// Dark theme styles\n\n$pt-dark-input-box-shadow: inset 0 0 0 1px rgba($white, 0.2),\n                           inset 0 -1px 1px 0 $gray3 !default;\n$pt-dark-input-intent-box-shadow-colors: (\n  \"primary\": $blue4,\n  \"success\": $green4,\n  \"warning\": $orange4,\n  \"danger\" : $red4,\n) !default;\n\n$pt-dark-dialog-box-shadow: $pt-dark-elevation-shadow-3 !default;\n// Dark popover borders are outset, so they can't use rgba($white, 0.3).\n// They also can't use $gray1 because its blue tint is noticeably different from other white borders in dark theme.\n// Instead, we create a new color tuned to match semi-transparent white borders on a dark theme background.\n$pt-dark-popover-border-color: hsl(215deg, 3%, 38%) !default;\n$pt-dark-popover-box-shadow: 0 0 0 1px $pt-dark-popover-border-color,\n                             $pt-dark-elevation-shadow-3 !default;\n// Equivalent to $pt-dark-elevation-shadow-3 without the inset border\n$pt-dark-tooltip-box-shadow: 0 2px 4px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 8px 24px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-toast-box-shadow: $pt-dark-elevation-shadow-3 !default;\n\n// Colors used for Windows high contrast mode\n// Because high contrast mode doesn't actually obey any colors we define, but uses system colors,\n// we define these variables in terms of System colors so that it's easier to understand the intent.\n// See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/system_color_keywords for more info on system colors.\n$pt-high-contrast-mode-border-color: buttonborder;\n$pt-high-contrast-mode-active-background-color: highlight;\n$pt-high-contrast-mode-active-text-color: highlight;\n$pt-high-contrast-mode-disabled-border-color: graytext;\n$pt-high-contrast-mode-disabled-text-color: graytext;\n$pt-high-contrast-mode-disabled-background-color: graytext;\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"../../common/mixins\";\n@import \"../../common/variables\";\n@import \"../../common/variables-extended\";\n@import \"../progress-bar/common\";\n\n$button-border-width: 1px !default;\n\n\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n$button-box-shadow:\n    inset 0 0 0 $button-border-width $gray4 !default;\n$button-box-shadow-hover:\n    inset 0 0 0 $button-border-width $gray3 !default;\n$button-box-shadow-active:\n    inset 0 0 0 $button-border-width $gray2 !default;\n\n$dark-button-box-shadow:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.2) !default;\n$dark-button-box-shadow-hover:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.2) !default;\n$dark-button-box-shadow-active:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.4) !default;\n\n$button-color-disabled: $pt-text-color-disabled !default;\n$button-background-color: $light-gray4 !default;\n$button-background-color-hover: $light-gray2 !default;\n$button-background-color-active: $light-gray1 !default;\n$button-background-color-disabled: $light-gray3 !default;\n$button-background-color-active-disabled: $light-gray2 !default;\n$button-intent-color-disabled: rgba($white, 0.8);\n$dark-button-color-disabled: $pt-dark-text-color-disabled !default;\n$dark-button-background-color: $dark-gray4 !default;\n$dark-button-background-color-hover: $dark-gray3 !default;\n$dark-button-background-color-active: $dark-gray1 !default;\n$dark-button-background-color-disabled: rgba($dark-gray5, 0.5) !default;\n$dark-button-background-color-active-disabled: rgba($dark-gray5, 0.7) !default;\n$dark-button-intent-color-disabled: rgba($white, 0.3);\n\n$minimal-button-divider-width: 1px !default;\n$minimal-button-background-color: none !default;\n$minimal-button-background-color-hover: $light-gray2 !default;\n$minimal-button-background-color-active: $light-gray1 !default;\n$dark-minimal-button-background-color: none !default;\n$dark-minimal-button-background-color-hover: rgba($gray3, 0.15) !default;\n$dark-minimal-button-background-color-active: rgba($gray3, 0.3) !default;\n\n$button-outlined-width: 1px !default;\n$button-outlined-border-intent-opacity: 1 !default;\n$button-outlined-border-disabled-intent-opacity: 0.5 !default;\n\n// \"intent\": (default, hover, active colors)\n$button-intents: (\n  \"primary\": ($primary3, $primary2, $primary1),\n  \"success\": ($success3, $success2, $success1),\n  \"warning\": ($warning3, $warning2, $warning1),\n  \"danger\": ($danger3, $danger2, $danger1)\n) !default;\n\n@mixin pt-button-layout() {\n  @include pt-flex-container(row, $comp-icon-spacing, $inline: inline);\n  align-items: center;\n\n  border: none;\n  border-radius: $pt-border-radius;\n  cursor: pointer;\n  font-size: $comp-font-size;\n  justify-content: center;\n  padding: $comp-padding;\n  text-align: left;\n  vertical-align: middle;\n}\n\n@mixin pt-button-height($height) {\n  height: $height;\n  min-width: $height;\n}\n\n@mixin pt-button-height-large() {\n  @include pt-button-height($pt-button-height-large);\n  @include pt-flex-margin(row, $comp-icon-spacing-large);\n  font-size: $comp-font-size-large;\n  padding: $comp-padding-large;\n}\n\n@mixin pt-button-height-default() {\n  @include pt-button-height($pt-button-height);\n  padding: $comp-padding;\n}\n\n@mixin pt-button-height-small() {\n  @include pt-button-height($pt-button-height-small);\n  @include pt-flex-margin(row, $comp-icon-spacing-small);\n  font-size: $comp-font-size-small;\n  padding: $comp-padding-small;\n\n}\n\n// N.B. this mixin cannot be used on pseudo element selectors because it will produce invalid CSS\n@mixin pt-button() {\n  @include pt-button-default-colors();\n\n  &:hover {\n    @include pt-button-hover();\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    @include pt-button-active();\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-button-disabled();\n\n    &.#{$ns}-active,\n    &.#{$ns}-active:hover {\n      background: $button-background-color-active-disabled;\n    }\n  }\n\n    &.#{$ns}-loading {\n        background-color: $button-background-color;\n        box-shadow: $button-box-shadow;\n  }\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    border: 1px solid $pt-high-contrast-mode-border-color;\n  }\n}\n\n@mixin pt-button-default-colors() {\n  background-color: $button-background-color;\n  box-shadow: $button-box-shadow;\n  color: $pt-text-color;\n}\n\n@mixin pt-button-hover() {\n  background-clip: padding-box;\n  background-color: $button-background-color-hover;\n  box-shadow: $button-box-shadow-hover;\n}\n\n@mixin pt-button-active() {\n  background-color: $button-background-color-active;\n  box-shadow: $button-box-shadow-active;\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    background: $pt-high-contrast-mode-active-background-color;\n  }\n}\n\n@mixin pt-button-disabled() {\n  background-color: $button-background-color-disabled;\n  box-shadow: none;\n  color: $button-color-disabled;\n  cursor: not-allowed;\n  outline: none;\n}\n\n@mixin pt-button-intent($default-color, $hover-color, $active-color) {\n  background-color: $default-color;\n  // box-shadow: $button-box-shadow;\n  color: $white;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    color: $white;\n  }\n\n  &:hover {\n    background-color: $hover-color;\n    // box-shadow: $button-box-shadow-active;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background-color: $active-color;\n    // box-shadow: $button-box-shadow-active;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-button-intent-disabled($default-color);\n  }\n\n  &.#{$ns}-loading {\n      background-color: rgba($default-color, 0.4);\n  }\n\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    // border: 1px solid $pt-high-contrast-mode-border-color;\n    box-shadow: none;\n  }\n}\n\n@mixin pt-button-intent-disabled($default-color) {\n  background-color: rgba($default-color, 0.3);\n  border-color: transparent;\n  box-shadow: none;\n  color: $button-intent-color-disabled;\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    border-color: $pt-high-contrast-mode-disabled-border-color;\n    color: $pt-high-contrast-mode-disabled-border-color;\n  }\n}\n\n// N.B. this mixin cannot be used on pseudo element selectors because it will produce invalid CSS\n@mixin pt-dark-button() {\n  @include pt-dark-button-default-colors();\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    color: $pt-dark-text-color;\n  }\n\n  &:hover {\n    @include pt-dark-button-hover();\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    @include pt-dark-button-active();\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-dark-button-disabled();\n\n    &.#{$ns}-active {\n      background: $dark-button-background-color-active-disabled;\n    }\n  }\n\n  .#{$ns}-button-spinner .#{$ns}-spinner-head {\n    background: $dark-progress-track-color;\n    stroke: $dark-progress-head-color;\n  }\n}\n\n@mixin pt-dark-button-default-colors() {\n  background-color: $dark-button-background-color;\n  box-shadow: $dark-button-box-shadow;\n  color: $pt-dark-text-color;\n}\n\n@mixin pt-dark-button-hover() {\n  background-color: $dark-button-background-color-hover;\n  box-shadow: $dark-button-box-shadow-hover;\n}\n\n@mixin pt-dark-button-active() {\n  background-color: $dark-button-background-color-active;\n  box-shadow: $dark-button-box-shadow-active;\n}\n\n@mixin pt-dark-button-disabled() {\n  background-color: $dark-button-background-color-disabled;\n  box-shadow: none;\n  color: $dark-button-color-disabled;\n}\n\n@mixin pt-dark-button-intent() {\n  box-shadow: $dark-button-box-shadow;\n\n  &:hover {\n    box-shadow: $dark-button-box-shadow;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    box-shadow: $dark-button-box-shadow-active;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-dark-button-intent-disabled();\n  }\n}\n\n@mixin pt-dark-button-intent-disabled() {\n  box-shadow: none;\n  color: $dark-button-intent-color-disabled;\n}\n\n@mixin pt-button-minimal() {\n  background: $minimal-button-background-color;\n  box-shadow: none;\n\n  &:hover {\n    background: $minimal-button-background-color-hover;\n    box-shadow: none;\n    color: $pt-text-color;\n    text-decoration: none;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: $minimal-button-background-color-active;\n    box-shadow: none;\n    color: $pt-text-color;\n  }\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    background: none;\n    color: $pt-text-color-disabled;\n    cursor: not-allowed;\n\n    &.#{$ns}-active {\n      background: $minimal-button-background-color-active;\n    }\n  }\n\n  .#{$ns}-dark & {\n    @include pt-dark-button-minimal();\n  }\n\n  @each $intent, $colors in $button-intents {\n    &.#{$ns}-intent-#{$intent} {\n      @include pt-button-minimal-intent($intent);\n    }\n  }\n}\n\n@mixin pt-dark-button-minimal() {\n  background: $dark-minimal-button-background-color;\n  box-shadow: none;\n  color: $white;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    background: none;\n    box-shadow: none;\n    color: $white;\n  }\n\n  &:hover {\n    background: $dark-minimal-button-background-color-hover;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: $dark-minimal-button-background-color-active;\n  }\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    background: none;\n    color: $pt-dark-text-color-disabled;\n    cursor: not-allowed;\n\n    &.#{$ns}-active {\n      background: $dark-minimal-button-background-color-active;\n    }\n  }\n}\n\n$dark-minimal-hover-text-colors: (\n  \"primary\": $blue5,\n  \"success\": $green5,\n  \"warning\": $orange5,\n  \"danger\": $red5,\n);\n\n$dark-minimal-active-text-colors: (\n  \"primary\": $blue6,\n  \"success\": $green6,\n  \"warning\": $orange6,\n  \"danger\": $red6,\n);\n\n@mixin pt-button-minimal-intent($intent) {\n  $intent-color: map-get($pt-intent-colors, $intent);\n  $text-color: map-get($pt-intent-text-colors, $intent);\n  $active-text-color: map-get($pt-intent-active-text-colors, $intent);\n  $dark-text-color: map-get($pt-dark-intent-text-colors, $intent);\n  $dark-active-text-color: map-get($dark-minimal-active-text-colors, $intent);\n  $dark-hover-text-color: map-get($dark-minimal-hover-text-colors, $intent);\n\n  color: $text-color;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    background: none;\n    box-shadow: none;\n    color: $text-color;\n  }\n\n  &:hover {\n    background: rgba($intent-color, 0.10);\n    color: $text-color;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: rgba($intent-color, 0.3);\n    color: $active-text-color;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    background: none;\n    color: rgba($text-color, 0.5);\n\n    &.#{$ns}-active {\n      background: rgba($intent-color, 0.3);\n    }\n  }\n\n  .#{$ns}-button-spinner .#{$ns}-spinner-head {\n    stroke: $text-color;\n  }\n\n  .#{$ns}-dark & {\n    color: $dark-text-color;\n\n    &:hover {\n      background: rgba($intent-color, 0.2);\n      color: $dark-hover-text-color;\n    }\n\n    &:active,\n    &.#{$ns}-active {\n      background: rgba($intent-color, 0.3);\n      color: $dark-active-text-color;\n    }\n\n    &:disabled,\n    &.#{$ns}-disabled {\n      background: none;\n      color: rgba($dark-text-color, 0.5);\n\n      &.#{$ns}-active {\n        background: rgba($intent-color, 0.3);\n      }\n    }\n  }\n}\n\n@mixin pt-button-minimal-divider() {\n  $divider-height: $pt-grid-size * 2;\n  background: $pt-divider-black;\n\n  margin: ($pt-button-height - $divider-height) * 0.5;\n  width: $minimal-button-divider-width;\n\n  .#{$ns}-dark & {\n    background: $pt-dark-divider-white;\n  }\n}\n\n$button-outlined-border-colors: (\n  \"primary\": $primary5,\n  \"success\": $success5,\n  \"warning\": $warning5,\n  \"danger\" : $danger5,\n\n\n) !default;\n\n\n@mixin pt-button-outlined() {\n    // border: $button-outlined-width solid rgba($pt-text-color, 0.2);\n  box-shadow: $button-box-shadow;\n  box-sizing: border-box;\n\n  &:disabled,\n  &.#{$ns}-disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled:hover {\n      box-shadow: $button-box-shadow;\n  }\n\n  &:hover {\n      box-shadow: $button-box-shadow-hover;\n  }\n\n  .#{$ns}-dark & {\n    @include pt-dark-button-outlined();\n  }\n\n  @each $intent, $colors in $button-intents {\n    &.#{$ns}-intent-#{$intent} {\n      @include pt-button-outlined-intent(\n        map-get($button-outlined-border-colors, $intent),\n        map-get($pt-dark-intent-text-colors, $intent)\n      );\n    }\n  }\n}\n\n@mixin pt-dark-button-outlined() {\n  border-color: rgba($white, 0.4);\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    border-color: rgba($white, 0.2);\n  }\n}\n\n@mixin pt-button-outlined-intent($border-color, $dark-border-color) {\n    box-shadow: inset 0 0 0 $button-border-width rgba($border-color, $button-outlined-border-intent-opacity);\n  // border-color: rgba($text-color, $button-outlined-border-intent-opacity);\n\n  &:disabled,\n  &.#{$ns}-disabled {\n      box-shadow: inset 0 0 0 $button-border-width rgba($border-color, $button-outlined-border-disabled-intent-opacity);\n  }\n\n  .#{$ns}-dark & {\n    border-color: rgba($dark-border-color, $button-outlined-border-intent-opacity);\n\n    &:disabled,\n    &.#{$ns}-disabled {\n      border-color: rgba($dark-border-color, $button-outlined-border-disabled-intent-opacity);\n    }\n  }\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/core/src/common/variables\";\n@import \"~@blueprintjs/core/src/components/button/common\";\n\n$banner-height: $pt-grid-size * 4;\n\n// banner along top of screen linking to v2 docs\n.docs-banner {\n  @include pt-flex-container(row);\n  @include overflow-ellipsis();\n  align-items: center;\n\n  box-shadow: inset 0 -1px 0 $pt-divider-black;\n  /* stylelint-disable declaration-no-important */\n  color: $white !important;\n  flex: 0 0 auto;\n  justify-content: center;\n  left: 0;\n  min-height: $banner-height;\n  padding: $pt-grid-size $pt-grid-size * 2;\n\n  position: fixed;\n  right: 0;\n  text-align: center;\n  top: 0;\n  z-index: $pt-z-index-overlay - 1;\n\n  @each $intent, $colors in $button-intents {\n    &.#{$ns}-intent-#{$intent} {\n      background: nth($colors, 1);\n\n      &:hover {\n        background: nth($colors, 2);\n      }\n\n      &:active {\n        background: nth($colors, 3);\n      }\n    }\n  }\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  .#{$ns}-dark & {\n    box-shadow: 0 1px 0 $pt-divider-black;\n  }\n\n  + .docs-app {\n    padding-top: $banner-height;\n\n    .docs-nav {\n      height: calc(100vh - #{$banner-height});\n    }\n\n    .docs-anchor {\n      // shift anchors down by $banner-height pixels\n      margin-top: -$content-padding * 2 - $banner-height;\n    }\n  }\n}\n","// Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n// this element becomes a flex container in the given direction.\n// supply `$margin` to put space between each child.\n// supply `$inline: inline` to use `display: flex-inline`.\n// customize `flex: 1 1` child selector with $fill.\n@mixin pt-flex-container($direction: row, $margin: none, $inline: none, $fill: \".#{$ns}-fill\") {\n  @if $inline == inline or $inline == true {\n    display: inline-flex;\n  } @else {\n    display: flex;\n  }\n  flex-direction: $direction;\n\n  > * {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n\n  > #{$fill} {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  @if $margin != none {\n    @include pt-flex-margin($direction, $margin);\n  }\n}\n\n// applies margin along axis of direction between every direct child, with no margins on either end.\n// $direction: row | column\n// $margin: margin[-right|-bottom] value\n@mixin pt-flex-margin($direction, $margin) {\n  $margin-prop: if($direction == row, margin-right, margin-bottom);\n\n  // CSS API support\n  &::before,\n  > * {\n    // space after all children\n    #{$margin-prop}: $margin;\n  }\n\n  // remove space after last child\n  &:empty::before,\n  > :last-child {\n    #{$margin-prop}: 0;\n  }\n}\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:math\";\n@import \"~@blueprintjs/colors/lib/scss/colors\";\n@import \"flex\";\n\n$pt-intent-colors: (\n  \"primary\": $pt-intent-primary,\n  \"success\": $pt-intent-success,\n  \"warning\": $pt-intent-warning,\n  \"danger\" : $pt-intent-danger,\n) !default;\n\n$pt-intent-text-colors: (\n  \"primary\": $primary2,\n  \"success\": $success2,\n  \"warning\": $warning2,\n  \"danger\" : $danger2,\n) !default;\n\n$pt-intent-active-text-colors: (\n  \"primary\": $primary1,\n  \"success\": $success1,\n  \"warning\": $warning1,\n  \"danger\": $danger1,\n) !default;\n\n$pt-dark-intent-text-colors: (\n  \"primary\": $primary5,\n  \"success\": $success5,\n  \"warning\": $warning5,\n  \"danger\" : $danger5,\n) !default;\n\n@mixin intent-color($intentName) {\n  color: map-get($pt-intent-colors, $intentName);\n}\n\n@mixin position-all($position, $value) {\n  bottom: $value;\n  left: $value;\n  position: $position;\n  right: $value;\n  top: $value;\n}\n\n@mixin base-typography() {\n  font-size: $pt-font-size;\n  font-weight: 400;\n  letter-spacing: 0;\n  line-height: $pt-line-height;\n  text-transform: none;\n}\n\n@mixin running-typography() {\n  font-size: $pt-font-size;\n  line-height: $pt-line-height;\n}\n\n@mixin heading-typography() {\n  color: $pt-heading-color;\n  font-weight: 500;\n\n  .#{$ns}-dark & {\n    color: $pt-dark-heading-color;\n  }\n}\n\n@mixin monospace-typography() {\n  font-family: $pt-font-family-monospace;\n  text-transform: none;\n}\n\n@mixin overflow-ellipsis() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n\n@mixin focus-outline($offset: 2px) {\n  outline: $pt-outline-color solid 2px;\n  outline-offset: $offset;\n  -moz-outline-radius: 6px;\n}\n\n@function border-shadow($alpha, $color: $black, $size: 1px) {\n  @return inset 0 0 0 $size rgba($color, $alpha);\n}\n\n// returns the padding necessary to center text in a container of the given height.\n// default line-height is that of base typography, 18px assuming 14px font-size.\n\n@function centered-text($height, $line-height: floor($pt-font-size * $pt-line-height)) {\n  @return floor(($height - $line-height) * 0.5);\n}\n\n// Removes the unit from a Sass numeric value (if present): `strip-unit(12px) => 12`\n// @see https://css-tricks.com/snippets/sass/strip-unit-function/\n\n@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return math.div($number, $number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n// Isolates z-indices\n\n@mixin new-render-layer() {\n  transform: translateZ(0);\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/core/src/components/icon/icon-mixins\";\n@import \"~@blueprintjs/icons/lib/scss/variables\";\n@import \"variables\";\n\n$heading-margin: $pt-grid-size * 4;\n$link-icon-padding: $pt-grid-size;\n\n$class-modifier-color: $rose4;\n$attribute-modifier-color: $violet5;\n\n// title of a section\n.docs-title {\n  margin: $heading-margin 0 ($heading-margin * 0.5);\n  position: relative;\n\n  // first heading (the h1 at the top) needs smaller top margin to avoid extra scrolling\n  .depth-1 > & {\n    margin-top: $content-padding;\n  }\n}\n\n// this element inside the <h*> tag creates extra space above when it is targeted by the location hash\n// but it doesn't change the bounds of the element or interfere with interactions. (thanks React docs site!)\n// so the heading will appear _below_ the navbar (since the navbar covers the top 50px of window).\n.docs-anchor {\n  margin-top: -$content-padding * 2;\n  position: absolute;\n}\n\n.docs-anchor-link {\n  @include pt-icon-colors();\n  left: 0;\n  line-height: $pt-icon-size-standard;\n  opacity: 0;\n  padding: $link-icon-padding;\n  position: absolute;\n  top: 50%;\n  transform: translate(-100%, -50%);\n\n  .#{$ns}-icon-standard {\n    vertical-align: top;\n  }\n\n  &:focus,\n  .docs-title:hover & {\n    opacity: 1;\n  }\n}\n\n.docs-markup .editor {\n  margin: 0;\n}\n\n// additions to the syntax theme\n.editor {\n  color: inherit;\n  overflow: auto;\n\n  .line {\n    line-height: 1.5;\n    padding-right: $pt-grid-size * 2;\n    white-space: nowrap;\n  }\n\n  .support.constant.handlebars {\n    // hide the {{ }} cuz who cares\n    display: none;\n\n    // color for {{:modifier}} to match modifier table\n    + span {\n      background: rgba($attribute-modifier-color, 0.15);\n      border-radius: $pt-border-radius;\n      color: $attribute-modifier-color;\n      padding: 0 3px;\n    }\n\n    // adjust colors for {{.modifier}}\n    + .variable {\n      background: rgba($class-modifier-color, 0.15);\n      color: $class-modifier-color;\n    }\n  }\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/colors/lib/scss/colors\";\n@import \"~@blueprintjs/core/src/common/variables\";\n@import \"~@blueprintjs/core/src/common/mixins\";\n\n$container-width: $pt-grid-size * 110;\n$container-padding: $pt-grid-size * 0.5;\n\n$sidebar-width: $pt-grid-size * 27;\n$sidebar-padding: $pt-grid-size * 1.5;\n$sidebar-background-color: $white;\n$dark-sidebar-background-color: $dark-gray4;\n\n$content-width: $container-width - $sidebar-width;\n$content-padding: $pt-grid-size * 2;\n$content-background-color: $light-gray5;\n$dark-content-background-color: $dark-gray3;\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/colors/lib/scss/colors\";\n\n@mixin pt-icon-font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n@mixin pt-icon-sized(\n  $font-size: $pt-icon-size-standard,\n  $font-family-size: strip-unit($font-size)\n) {\n  font-family: \"blueprint-icons-#{$font-family-size}\", sans-serif;\n  font-size: $font-size;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: 400;\n  line-height: 1;\n}\n\n@mixin pt-icon-colors() {\n  color: $pt-icon-color;\n\n  &:hover {\n    color: $pt-icon-color-hover;\n  }\n\n  .#{$ns}-dark & {\n    color: $pt-dark-icon-color;\n\n    &:hover {\n      color: $pt-dark-icon-color-hover;\n    }\n  }\n}\n\n@mixin pt-icon(\n  $font-size: $pt-icon-size-standard,\n  $font-family-size: strip-unit($font-size)\n) {\n  @include pt-icon-sized($font-size, $font-family-size);\n  @include pt-icon-font-smoothing();\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n// Base styles for all examples\n\n$example-frame-spacing: $pt-grid-size;\n$example-frame-border-radius: $pt-border-radius * 2;\n$example-spacing: $pt-grid-size * 4;\n\n$example-background-color: $white;\n$code-background-color: $light-gray4;\n$options-background-color: $light-gray4;\n\n$dark-example-background-color: $dark-gray2;\n$dark-code-background-color: $dark-gray4;\n$dark-options-background-color: $dark-gray4;\n\n// full-bleed wrapper for example\n.docs-example-frame {\n  margin-top: $content-padding * 2;\n  position: relative;\n  width: 100%;\n}\n\n// options to the right of example in same row\n.docs-example-frame-row {\n  @include pt-flex-container(row, $pt-grid-size, $fill: \".docs-example\");\n\n  // option elements arranged vertically. use headings for grouping.\n  .docs-example-options {\n    @include pt-flex-container(column, $pt-grid-size);\n    max-width: $pt-grid-size * 30;\n  }\n}\n\n// options below example in its own row.\n.docs-example-frame-column {\n  @include pt-flex-container(column, $pt-grid-size, $fill: \".docs-example\");\n\n  // option elements arranged horizontally. group controls into columns.\n  .docs-example-options {\n    @include pt-flex-container(row, $pt-grid-size * 4);\n    justify-content: center;\n    max-width: unset;\n  }\n}\n\n.docs-example {\n  align-items: center;\n  background: $example-background-color;\n  border-radius: $example-frame-border-radius;\n  display: flex;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 100%;\n  // https://css-tricks.com/flexbox-truncated-text/#article-header-id-3\n  min-width: 0;\n  padding: $example-spacing * 0.5;\n\n  .#{$ns}-dark & {\n    background: $dark-example-background-color;\n  }\n\n  > * {\n    margin: $example-spacing * 0.5;\n  }\n}\n\n.docs-example-options {\n  background-color: $options-background-color;\n  border-radius: $example-frame-border-radius;\n  flex: 0 0 auto;\n  padding: $pt-grid-size * 2;\n  text-align: left;\n\n  .#{$ns}-heading:not(:first-child) {\n    margin-top: $pt-grid-size;\n  }\n\n  .docs-prop-description {\n    font-size: $pt-font-size-small;\n  }\n\n  .#{$ns}-control:last-child,\n  .#{$ns}-form-group:last-child,\n  .#{$ns}-label:last-child {\n    margin-bottom: 0;\n  }\n\n  .#{$ns}-dark & {\n    background-color: $dark-options-background-color;\n  }\n}\n\n.docs-example-markup {\n  margin-top: $example-frame-spacing;\n\n  .editor {\n    background: $code-background-color;\n    border-radius: $example-frame-border-radius;\n    box-shadow: none;\n    margin: 0;\n\n    .#{$ns}-dark & {\n      background: $dark-code-background-color;\n      box-shadow: none;\n    }\n  }\n}\n\n.docs-example-view-source {\n  border-radius: $example-frame-border-radius;\n  display: block;\n  margin-bottom: $pt-grid-size * 4;\n  margin-top: $example-frame-spacing;\n\n  &.#{$ns}-button {\n    height: $pt-button-height-large;\n    transition: background-color $pt-transition-duration $pt-transition-ease;\n  }\n\n  &:not(:hover):not(:active) {\n    background-color: $code-background-color;\n\n    .#{$ns}-dark & {\n      background-color: $dark-code-background-color;\n    }\n  }\n}\n\n// colors for CSS modifiers\n.#{$ns}-code[data-modifier^=\":\"] {\n  color: $attribute-modifier-color;\n}\n\n.#{$ns}-code[data-modifier^=\".\"] {\n  color: $class-modifier-color;\n}\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"../../common/mixins\";\n@import \"../../common/variables\";\n@import \"../../common/variables-extended\";\n@import \"../progress-bar/common\";\n\n$button-border-width: 1px !default;\n\n\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n$button-box-shadow:\n    inset 0 0 0 $button-border-width $gray4 !default;\n$button-box-shadow-hover:\n    inset 0 0 0 $button-border-width $gray3 !default;\n$button-box-shadow-active:\n    inset 0 0 0 $button-border-width $gray2 !default;\n\n$dark-button-box-shadow:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.2) !default;\n$dark-button-box-shadow-hover:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.2) !default;\n$dark-button-box-shadow-active:\n  inset 0 0 0 $button-border-width rgba($white, 0.1),\n  0 1px 2px rgba($black, 0.4) !default;\n\n$button-color-disabled: $pt-text-color-disabled !default;\n$button-background-color: $light-gray4 !default;\n$button-background-color-hover: $light-gray2 !default;\n$button-background-color-active: $light-gray1 !default;\n$button-background-color-disabled: $light-gray3 !default;\n$button-background-color-active-disabled: $light-gray2 !default;\n$button-intent-color-disabled: rgba($white, 0.8);\n$dark-button-color-disabled: $pt-dark-text-color-disabled !default;\n$dark-button-background-color: $dark-gray4 !default;\n$dark-button-background-color-hover: $dark-gray3 !default;\n$dark-button-background-color-active: $dark-gray1 !default;\n$dark-button-background-color-disabled: rgba($dark-gray5, 0.5) !default;\n$dark-button-background-color-active-disabled: rgba($dark-gray5, 0.7) !default;\n$dark-button-intent-color-disabled: rgba($white, 0.3);\n\n$minimal-button-divider-width: 1px !default;\n$minimal-button-background-color: none !default;\n$minimal-button-background-color-hover: $light-gray2 !default;\n$minimal-button-background-color-active: $light-gray1 !default;\n$dark-minimal-button-background-color: none !default;\n$dark-minimal-button-background-color-hover: rgba($gray3, 0.15) !default;\n$dark-minimal-button-background-color-active: rgba($gray3, 0.3) !default;\n\n$button-outlined-width: 1px !default;\n$button-outlined-border-intent-opacity: 1 !default;\n$button-outlined-border-disabled-intent-opacity: 0.5 !default;\n\n// \"intent\": (default, hover, active colors)\n$button-intents: (\n  \"primary\": ($primary3, $primary2, $primary1),\n  \"success\": ($success3, $success2, $success1),\n  \"warning\": ($warning3, $warning2, $warning1),\n  \"danger\": ($danger3, $danger2, $danger1)\n) !default;\n\n@mixin pt-button-layout() {\n  @include pt-flex-container(row, $comp-icon-spacing, $inline: inline);\n  align-items: center;\n\n  border: none;\n  border-radius: $pt-border-radius;\n  cursor: pointer;\n  font-size: $comp-font-size;\n  justify-content: center;\n  padding: $comp-padding;\n  text-align: left;\n  vertical-align: middle;\n}\n\n@mixin pt-button-height($height) {\n  height: $height;\n  min-width: $height;\n}\n\n@mixin pt-button-height-large() {\n  @include pt-button-height($pt-button-height-large);\n  @include pt-flex-margin(row, $comp-icon-spacing-large);\n  font-size: $comp-font-size-large;\n  padding: $comp-padding-large;\n}\n\n@mixin pt-button-height-default() {\n  @include pt-button-height($pt-button-height);\n  padding: $comp-padding;\n}\n\n@mixin pt-button-height-small() {\n  @include pt-button-height($pt-button-height-small);\n  @include pt-flex-margin(row, $comp-icon-spacing-small);\n  font-size: $comp-font-size-small;\n  padding: $comp-padding-small;\n\n}\n\n// N.B. this mixin cannot be used on pseudo element selectors because it will produce invalid CSS\n@mixin pt-button() {\n  @include pt-button-default-colors();\n\n  &:hover {\n    @include pt-button-hover();\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    @include pt-button-active();\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-button-disabled();\n\n    &.#{$ns}-active,\n    &.#{$ns}-active:hover {\n      background: $button-background-color-active-disabled;\n    }\n  }\n\n    &.#{$ns}-loading {\n        background-color: $button-background-color;\n        box-shadow: $button-box-shadow;\n  }\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    border: 1px solid $pt-high-contrast-mode-border-color;\n  }\n}\n\n@mixin pt-button-default-colors() {\n  background-color: $button-background-color;\n  box-shadow: $button-box-shadow;\n  color: $pt-text-color;\n}\n\n@mixin pt-button-hover() {\n  background-clip: padding-box;\n  background-color: $button-background-color-hover;\n  box-shadow: $button-box-shadow-hover;\n}\n\n@mixin pt-button-active() {\n  background-color: $button-background-color-active;\n  box-shadow: $button-box-shadow-active;\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    background: $pt-high-contrast-mode-active-background-color;\n  }\n}\n\n@mixin pt-button-disabled() {\n  background-color: $button-background-color-disabled;\n  box-shadow: none;\n  color: $button-color-disabled;\n  cursor: not-allowed;\n  outline: none;\n}\n\n@mixin pt-button-intent($default-color, $hover-color, $active-color) {\n  background-color: $default-color;\n  // box-shadow: $button-box-shadow;\n  color: $white;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    color: $white;\n  }\n\n  &:hover {\n    background-color: $hover-color;\n    // box-shadow: $button-box-shadow-active;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background-color: $active-color;\n    // box-shadow: $button-box-shadow-active;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-button-intent-disabled($default-color);\n  }\n\n  &.#{$ns}-loading {\n      background-color: rgba($default-color, 0.4);\n  }\n\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    // border: 1px solid $pt-high-contrast-mode-border-color;\n    box-shadow: none;\n  }\n}\n\n@mixin pt-button-intent-disabled($default-color) {\n  background-color: rgba($default-color, 0.3);\n  border-color: transparent;\n  box-shadow: none;\n  color: $button-intent-color-disabled;\n\n  @media (forced-colors: active) and (prefers-color-scheme: dark) {\n    // Windows High Contrast dark theme\n    border-color: $pt-high-contrast-mode-disabled-border-color;\n    color: $pt-high-contrast-mode-disabled-border-color;\n  }\n}\n\n// N.B. this mixin cannot be used on pseudo element selectors because it will produce invalid CSS\n@mixin pt-dark-button() {\n  @include pt-dark-button-default-colors();\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    color: $pt-dark-text-color;\n  }\n\n  &:hover {\n    @include pt-dark-button-hover();\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    @include pt-dark-button-active();\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-dark-button-disabled();\n\n    &.#{$ns}-active {\n      background: $dark-button-background-color-active-disabled;\n    }\n  }\n\n  .#{$ns}-button-spinner .#{$ns}-spinner-head {\n    background: $dark-progress-track-color;\n    stroke: $dark-progress-head-color;\n  }\n}\n\n@mixin pt-dark-button-default-colors() {\n  background-color: $dark-button-background-color;\n  box-shadow: $dark-button-box-shadow;\n  color: $pt-dark-text-color;\n}\n\n@mixin pt-dark-button-hover() {\n  background-color: $dark-button-background-color-hover;\n  box-shadow: $dark-button-box-shadow-hover;\n}\n\n@mixin pt-dark-button-active() {\n  background-color: $dark-button-background-color-active;\n  box-shadow: $dark-button-box-shadow-active;\n}\n\n@mixin pt-dark-button-disabled() {\n  background-color: $dark-button-background-color-disabled;\n  box-shadow: none;\n  color: $dark-button-color-disabled;\n}\n\n@mixin pt-dark-button-intent() {\n  box-shadow: $dark-button-box-shadow;\n\n  &:hover {\n    box-shadow: $dark-button-box-shadow;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    box-shadow: $dark-button-box-shadow-active;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    @include pt-dark-button-intent-disabled();\n  }\n}\n\n@mixin pt-dark-button-intent-disabled() {\n  box-shadow: none;\n  color: $dark-button-intent-color-disabled;\n}\n\n@mixin pt-button-minimal() {\n  background: $minimal-button-background-color;\n  box-shadow: none;\n\n  &:hover {\n    background: $minimal-button-background-color-hover;\n    box-shadow: none;\n    color: $pt-text-color;\n    text-decoration: none;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: $minimal-button-background-color-active;\n    box-shadow: none;\n    color: $pt-text-color;\n  }\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    background: none;\n    color: $pt-text-color-disabled;\n    cursor: not-allowed;\n\n    &.#{$ns}-active {\n      background: $minimal-button-background-color-active;\n    }\n  }\n\n  .#{$ns}-dark & {\n    @include pt-dark-button-minimal();\n  }\n\n  @each $intent, $colors in $button-intents {\n    &.#{$ns}-intent-#{$intent} {\n      @include pt-button-minimal-intent($intent);\n    }\n  }\n}\n\n@mixin pt-dark-button-minimal() {\n  background: $dark-minimal-button-background-color;\n  box-shadow: none;\n  color: $white;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    background: none;\n    box-shadow: none;\n    color: $white;\n  }\n\n  &:hover {\n    background: $dark-minimal-button-background-color-hover;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: $dark-minimal-button-background-color-active;\n  }\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    background: none;\n    color: $pt-dark-text-color-disabled;\n    cursor: not-allowed;\n\n    &.#{$ns}-active {\n      background: $dark-minimal-button-background-color-active;\n    }\n  }\n}\n\n$dark-minimal-hover-text-colors: (\n  \"primary\": $blue5,\n  \"success\": $green5,\n  \"warning\": $orange5,\n  \"danger\": $red5,\n);\n\n$dark-minimal-active-text-colors: (\n  \"primary\": $blue6,\n  \"success\": $green6,\n  \"warning\": $orange6,\n  \"danger\": $red6,\n);\n\n@mixin pt-button-minimal-intent($intent) {\n  $intent-color: map-get($pt-intent-colors, $intent);\n  $text-color: map-get($pt-intent-text-colors, $intent);\n  $active-text-color: map-get($pt-intent-active-text-colors, $intent);\n  $dark-text-color: map-get($pt-dark-intent-text-colors, $intent);\n  $dark-active-text-color: map-get($dark-minimal-active-text-colors, $intent);\n  $dark-hover-text-color: map-get($dark-minimal-hover-text-colors, $intent);\n\n  color: $text-color;\n\n  &:hover,\n  &:active,\n  &.#{$ns}-active {\n    background: none;\n    box-shadow: none;\n    color: $text-color;\n  }\n\n  &:hover {\n    background: rgba($intent-color, 0.10);\n    color: $text-color;\n  }\n\n  &:active,\n  &.#{$ns}-active {\n    background: rgba($intent-color, 0.3);\n    color: $active-text-color;\n  }\n\n  &:disabled,\n  &.#{$ns}-disabled {\n    background: none;\n    color: rgba($text-color, 0.5);\n\n    &.#{$ns}-active {\n      background: rgba($intent-color, 0.3);\n    }\n  }\n\n  .#{$ns}-button-spinner .#{$ns}-spinner-head {\n    stroke: $text-color;\n  }\n\n  .#{$ns}-dark & {\n    color: $dark-text-color;\n\n    &:hover {\n      background: rgba($intent-color, 0.2);\n      color: $dark-hover-text-color;\n    }\n\n    &:active,\n    &.#{$ns}-active {\n      background: rgba($intent-color, 0.3);\n      color: $dark-active-text-color;\n    }\n\n    &:disabled,\n    &.#{$ns}-disabled {\n      background: none;\n      color: rgba($dark-text-color, 0.5);\n\n      &.#{$ns}-active {\n        background: rgba($intent-color, 0.3);\n      }\n    }\n  }\n}\n\n@mixin pt-button-minimal-divider() {\n  $divider-height: $pt-grid-size * 2;\n  background: $pt-divider-black;\n\n  margin: ($pt-button-height - $divider-height) * 0.5;\n  width: $minimal-button-divider-width;\n\n  .#{$ns}-dark & {\n    background: $pt-dark-divider-white;\n  }\n}\n\n$button-outlined-border-colors: (\n  \"primary\": $primary5,\n  \"success\": $success5,\n  \"warning\": $warning5,\n  \"danger\" : $danger5,\n\n\n) !default;\n\n\n@mixin pt-button-outlined() {\n    // border: $button-outlined-width solid rgba($pt-text-color, 0.2);\n  box-shadow: $button-box-shadow;\n  box-sizing: border-box;\n\n  &:disabled,\n  &.#{$ns}-disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled:hover {\n      box-shadow: $button-box-shadow;\n  }\n\n  &:hover {\n      box-shadow: $button-box-shadow-hover;\n  }\n\n  .#{$ns}-dark & {\n    @include pt-dark-button-outlined();\n  }\n\n  @each $intent, $colors in $button-intents {\n    &.#{$ns}-intent-#{$intent} {\n      @include pt-button-outlined-intent(\n        map-get($button-outlined-border-colors, $intent),\n        map-get($pt-dark-intent-text-colors, $intent)\n      );\n    }\n  }\n}\n\n@mixin pt-dark-button-outlined() {\n  border-color: rgba($white, 0.4);\n\n  &:disabled,\n  &:disabled:hover,\n  &.#{$ns}-disabled,\n  &.#{$ns}-disabled:hover {\n    border-color: rgba($white, 0.2);\n  }\n}\n\n@mixin pt-button-outlined-intent($border-color, $dark-border-color) {\n    box-shadow: inset 0 0 0 $button-border-width rgba($border-color, $button-outlined-border-intent-opacity);\n  // border-color: rgba($text-color, $button-outlined-border-intent-opacity);\n\n  &:disabled,\n  &.#{$ns}-disabled {\n      box-shadow: inset 0 0 0 $button-border-width rgba($border-color, $button-outlined-border-disabled-intent-opacity);\n  }\n\n  .#{$ns}-dark & {\n    border-color: rgba($dark-border-color, $button-outlined-border-intent-opacity);\n\n    &:disabled,\n    &.#{$ns}-disabled {\n      border-color: rgba($dark-border-color, $button-outlined-border-disabled-intent-opacity);\n    }\n  }\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"variables\";\n@import \"../../../core/src/components/forms/common\";\n\n$nav-item-indent: $pt-grid-size * 2;\n\n$nav-item-color-hover: $minimal-button-background-color-hover;\n$nav-item-color-active: $minimal-button-background-color-active;\n$dark-nav-item-color-hover: $dark-minimal-button-background-color-hover;\n$dark-nav-item-color-active: $dark-minimal-button-background-color-active;\n\nbody {\n  // vertical scrollbar is always visible for the `.#{$ns}-overlay-open` padding (from `scrollbar.ts`)\n  overflow-y: scroll;\n}\n\n/*\nFlex utils\n*/\n\n.docs-flex-row {\n  @include pt-flex-container(row);\n}\n\n.docs-flex-column {\n  @include pt-flex-container(column);\n}\n\n/*\nPage layout elements\n*/\n\n.docs-root {\n  background-color: $content-background-color;\n\n  &.#{$ns}-dark {\n    background-color: $dark-content-background-color;\n  }\n}\n\n.docs-app {\n  @include pt-flex-container(row);\n  margin: auto;\n  max-width: $container-width;\n  min-height: 100vh;\n}\n\n.docs-nav-wrapper {\n  flex-basis: $sidebar-width;\n  position: relative;\n  z-index: $pt-z-index-content;\n}\n\n.docs-nav {\n  $background-shift: 999px;\n  background-color: $sidebar-background-color;\n  box-shadow: 1px 0 0 $pt-divider-black;\n  height: 100vh;\n\n  // these rules allow the nav background-color to cover all area to the left\n  /* stylelint-disable-next-line order/properties-order */\n  margin-left: -$background-shift;\n  overflow-y: auto;\n  padding-bottom: $sidebar-padding * 2;\n  padding-left: $background-shift + $container-padding;\n\n  position: fixed;\n  width: $sidebar-width + $background-shift;\n\n  .#{$ns}-dark & {\n    background-color: $dark-sidebar-background-color;\n    box-shadow: 1px 0 0 $pt-dark-divider-black;\n  }\n\n  > * {\n    padding: $sidebar-padding;\n    padding-left: 0;\n  }\n}\n\n.docs-content-wrapper {\n  align-items: flex-start;\n  background-color: $content-background-color;\n  flex-basis: $content-width;\n  outline: none;\n\n  .#{$ns}-dark & {\n    background-color: $dark-content-background-color;\n  }\n}\n\n.docs-page {\n  max-width: $content-width;\n  padding-bottom: $content-padding * 2;\n  padding-left: $content-padding * 2;\n  padding-right: $container-padding;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  padding-top: 0;\n  position: relative;\n}\n\n.docs-page-actions {\n  position: absolute;\n  right: 0;\n  top: $container-padding;\n  // above h1 heading\n  z-index: 1;\n}\n\n/*\nLefthand navigation menu\n*/\n\n.docs-nav-menu {\n  .#{$ns}-menu-item {\n    align-items: center;\n    padding-left: 0;\n    padding-right: $pt-grid-size;\n    white-space: initial;\n\n    &:hover,\n    &.#{$ns}-active,\n    &.docs-nav-expanded {\n      // bold text instead of background color\n      /* stylelint-disable-next-line declaration-no-important */\n      background-color: transparent !important;\n      font-weight: 600;\n    }\n\n    @each $depth in (1, 2, 3, 4, 5) {\n      &.depth-#{$depth} {\n        padding-left: $nav-item-indent * $depth;\n      }\n    }\n  }\n\n  .docs-nav-menu {\n    // nested menus are hidden by default\n    display: none;\n    // nested menus indent automatically\n    margin-left: $nav-item-indent;\n  }\n\n  .docs-nav-expanded + & {\n    display: block;\n  }\n}\n\n.docs-nav-title {\n  @include pt-flex-container(row);\n  align-items: center;\n}\n\n// empty state item is hidden by default...\n.docs-empty-state {\n  display: none;\n}\n\n// ...and appears when the actual menu is empty\n.docs-nav-menu:empty + .docs-empty-state {\n  display: block;\n}\n\n// hides all documentation content, to focus on live examples\n// trigger this behavior by adding ?examples to URL immediately after the path (before #route):\n// http://blueprintjs.com/docs/?examples\n.docs-examples-only {\n  .docs-markup,\n  .docs-modifiers,\n  .docs-title,\n  .docs-section > .#{$ns}-running-text {\n    display: none;\n  }\n}\n","// Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n// this element becomes a flex container in the given direction.\n// supply `$margin` to put space between each child.\n// supply `$inline: inline` to use `display: flex-inline`.\n// customize `flex: 1 1` child selector with $fill.\n@mixin pt-flex-container($direction: row, $margin: none, $inline: none, $fill: \".#{$ns}-fill\") {\n  @if $inline == inline or $inline == true {\n    display: inline-flex;\n  } @else {\n    display: flex;\n  }\n  flex-direction: $direction;\n\n  > * {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n\n  > #{$fill} {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  @if $margin != none {\n    @include pt-flex-margin($direction, $margin);\n  }\n}\n\n// applies margin along axis of direction between every direct child, with no margins on either end.\n// $direction: row | column\n// $margin: margin[-right|-bottom] value\n@mixin pt-flex-margin($direction, $margin) {\n  $margin-prop: if($direction == row, margin-right, margin-bottom);\n\n  // CSS API support\n  &::before,\n  > * {\n    // space after all children\n    #{$margin-prop}: $margin;\n  }\n\n  // remove space after last child\n  &:empty::before,\n  > :last-child {\n    #{$margin-prop}: 0;\n  }\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"variables\";\n@import \"../../../core/src/components/button/common\";\n\n$nav-divider-offset: $pt-grid-size * 5;\n\n@mixin divider-gradient($color, $dark-color) {\n  background-image: linear-gradient(to right, rgba($color, 0) 0%, $color 40%);\n\n  .#{$ns}-dark & {\n    background-image: linear-gradient(to right, rgba($dark-color, 0) 0%, $dark-color 40%);\n  }\n}\n\n.docs-nav-button {\n  @include pt-flex-container(row, $pt-grid-size + 4px);\n  align-items: center;\n  cursor: pointer;\n\n  margin-left: -$nav-divider-offset;\n  padding: $pt-grid-size $sidebar-padding;\n  padding-left: $nav-divider-offset + 4px;\n\n  &:hover {\n    @include divider-gradient($content-background-color, $dark-content-background-color);\n    color: inherit;\n  }\n}\n\n.docs-nav-divider {\n  @include divider-gradient($pt-divider-black, $pt-dark-divider-black);\n  background-image: linear-gradient(to right, rgba($black, 0) 0%, $pt-divider-black 40%);\n  height: 1px;\n  margin-left: -$nav-divider-offset;\n  padding: 0;\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n$navigator-width: $pt-grid-size * 40;\n\n.docs-navigator-menu {\n  left: calc(50% - #{$navigator-width * 0.5});\n  width: $navigator-width;\n\n  .#{$ns}-menu-item small {\n    align-items: center;\n    // center-align text and SVG icons\n    display: flex;\n  }\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\ntable {\n  width: 100%;\n}\n\n// override normalize.css\ninput[type=\"search\"] {\n  box-sizing: border-box;\n}\n\n.#{$ns}-callout p:last-child {\n  margin: 0;\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n.docs-prop-details code {\n  /* stylelint-disable declaration-no-important */\n  background: none !important;\n  box-shadow: none !important;\n  color: inherit !important;\n  font-size: small;\n  font-weight: 600;\n  padding: 0;\n  /* stylelint-enable declaration-no-important */\n}\n\n.docs-prop-default {\n  font-weight: 400;\n\n  &:empty { display: none; }\n\n  &::before {\n    content: \"=\";\n    display: inline-block;\n    margin: 0 ($pt-grid-size * 0.5);\n  }\n}\n\n.docs-prop-description {\n  margin-top: $pt-grid-size * 0.5;\n\n  p:last-child {\n    margin: 0;\n  }\n}\n\n.docs-prop-tags {\n  &:empty { display: none; }\n\n  .#{$ns}-tag {\n    margin-right: $pt-grid-size;\n    margin-top: $pt-grid-size * 0.5;\n  }\n}\n\n.docs-prop-name code::after {\n  @include pt-icon();\n  line-height: small;\n  margin-left: $pt-grid-size * 0.5;\n  vertical-align: middle;\n}\n\n.docs-prop-is-deprecated code {\n  color: $red3;\n\n  &::after {\n    content: map-get($blueprint-icon-codepoints, \"small-cross\");\n  }\n}\n\n.docs-prop-is-required code {\n  color: $green3;\n\n  .#{$ns}-dark & {\n    color: $green4;\n  }\n\n  &::after {\n    content: map-get($blueprint-icon-codepoints, \"small-tick\");\n  }\n}\n\n.docs-interface-header {\n  align-items: center;\n  box-shadow: 0 1px 0 $pt-divider-black;\n  display: flex;\n  font-family: $pt-font-family-monospace;\n  font-size: $pt-font-size-large;\n  font-weight: 600;\n  justify-content: space-between;\n  padding: $pt-grid-size 0;\n  position: relative;\n\n  // optional interface description\n  + .docs-section {\n    box-shadow: 0 1px 0 $pt-divider-black;\n    display: flex;\n    flex-direction: column;\n    margin-top: $pt-grid-size;\n  }\n\n  .#{$ns}-dark & {\n    box-shadow: 0 1px 0 $pt-dark-divider-white;\n\n    + .docs-section {\n      box-shadow: 0 1px 0 $pt-dark-divider-white;\n    }\n  }\n}\n\n.docs-package-name {\n  // adjusts text baseline with interface name\n  margin-top: $pt-font-size-large - $pt-font-size;\n}\n\n.docs-type-alias {\n  overflow: auto;\n  padding: $pt-grid-size ($pt-grid-size * 2);\n}\n\n.docs-modifiers-table {\n  .docs-section & .#{$ns}-html-table {\n    margin-top: $pt-grid-size;\n  }\n\n  th:first-child,\n  td:first-child {\n    padding-left: 0;\n  }\n\n  tr:last-child td {\n    padding-bottom: 0;\n  }\n}\n\n// modifiers table parent\n.docs-modifiers {\n  margin-bottom: $heading-margin;\n  margin-top: $heading-margin * 0.5;\n}\n","// Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"variables\";\n\n$syntax-background-color: $white;\n$syntax-text-color: $dark-gray1;\n$syntax-token-colors: (\n  \"brace\": $dark-gray3,\n  \"support\": $turquoise3,\n  \"entity.attribute-name\": $orange3,\n  \"entity.function\": $blue3,\n  \"entity.id\": $gold2,\n  \"entity.pseudo-class\": $rose2,\n  \"entity.pseudo-element\": $forest3,\n  \"entity.tag\": $forest3,\n  \"class.component\": $forest3,\n  \"keyword\": $violet4,\n  \"numeric\": $rose2,\n  \"operator\": $violet4,\n  \"punctuation\": $dark-gray3,\n  \"storage\": $violet4,\n  \"string\": $lime2,\n  \"type\": $gold2,\n  \"variable\": $turquoise2,\n  \"comment\": $gray2,\n);\n\n$dark-syntax-background-color: $dark-gray2;\n$dark-syntax-text-color: $gray5;\n$dark-syntax-token-colors: (\n  \"brace\": $light-gray5,\n  \"support\": $turquoise5,\n  \"entity.attribute-name\": $orange4,\n  \"entity.function\": $blue4,\n  \"entity.id\": $gold5,\n  \"entity.pseudo-class\": $rose3,\n  \"entity.pseudo-element\": $forest3,\n  \"entity.tag\": $forest3,\n  \"class.component\": $forest3,\n  \"keyword\": $violet4,\n  \"numeric\": $rose4,\n  \"operator\": $violet5,\n  \"punctuation\": $light-gray5,\n  \"storage\": $violet4,\n  \"string\": $lime4,\n  \"type\": $gold4,\n  \"variable\": $turquoise3,\n  \"comment\": $gray2,\n);\n\n// given a map of TextMate tokens to colors\n@mixin syntax($colors) {\n  // this one is a very special case and must come before @each for specificity\n  .entity.name,\n  .entity.inherited-class,\n  .meta.name,\n  .support.type {\n    color: map-get($colors, \"type\");\n  }\n\n  @each $scope, $color in $colors {\n    @if $scope != \"type\" {\n      .#{$scope} { color: $color; }\n    }\n  }\n\n  .variable.property,\n  .support.type.scss,\n  .punctuation.definition.css {\n    color: inherit;\n  }\n\n  .variable.constant,\n  .variable.language {\n    color: map-get($colors, \"support\");\n  }\n\n  // JSX ={prop} punctuation\n  .punctuation.section.embedded {\n    color: map-get($colors, \"operator\");\n  }\n}\n\n// actually generate the two themes:\n.editor-colors {\n  @include syntax($syntax-token-colors);\n  background: $syntax-background-color;\n  color: $syntax-text-color;\n\n  // italicize all type information\n  .meta.type {\n    font-style: italic;\n  }\n\n  .#{$ns}-dark & {\n    @include syntax($dark-syntax-token-colors);\n    background: $dark-syntax-background-color;\n    color: $dark-syntax-text-color;\n  }\n}\n\n"]}